

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 22 22:58:24 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 12/10/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0004                     fsr             equ	4
    48     0004                     fsr0            equ	4
    49     0000                     indf            equ	0
    50     0000                     indf0           equ	0
    51     0002                     pc              equ	2
    52     0002                     pcl             equ	2
    53     000A                     pclath          equ	10
    54     0003                     status          equ	3
    55     0000                     INDF            equ	0	;# 
    56     0001                     TMR0            equ	1	;# 
    57     0002                     PCL             equ	2	;# 
    58     0003                     STATUS          equ	3	;# 
    59     0004                     FSR             equ	4	;# 
    60     0005                     PORTA           equ	5	;# 
    61     0006                     PORTB           equ	6	;# 
    62     0007                     PORTC           equ	7	;# 
    63     0008                     PORTD           equ	8	;# 
    64     0009                     PORTE           equ	9	;# 
    65     000A                     PCLATH          equ	10	;# 
    66     000B                     INTCON          equ	11	;# 
    67     000C                     PIR1            equ	12	;# 
    68     000D                     PIR2            equ	13	;# 
    69     000E                     TMR1            equ	14	;# 
    70     000E                     TMR1L           equ	14	;# 
    71     000F                     TMR1H           equ	15	;# 
    72     0010                     T1CON           equ	16	;# 
    73     0011                     TMR2            equ	17	;# 
    74     0012                     T2CON           equ	18	;# 
    75     0013                     SSPBUF          equ	19	;# 
    76     0014                     SSPCON          equ	20	;# 
    77     0015                     CCPR1           equ	21	;# 
    78     0015                     CCPR1L          equ	21	;# 
    79     0016                     CCPR1H          equ	22	;# 
    80     0017                     CCP1CON         equ	23	;# 
    81     0018                     RCSTA           equ	24	;# 
    82     0019                     TXREG           equ	25	;# 
    83     001A                     RCREG           equ	26	;# 
    84     001B                     CCPR2           equ	27	;# 
    85     001B                     CCPR2L          equ	27	;# 
    86     001C                     CCPR2H          equ	28	;# 
    87     001D                     CCP2CON         equ	29	;# 
    88     001E                     ADRESH          equ	30	;# 
    89     001F                     ADCON0          equ	31	;# 
    90     0081                     OPTION_REG      equ	129	;# 
    91     0085                     TRISA           equ	133	;# 
    92     0086                     TRISB           equ	134	;# 
    93     0087                     TRISC           equ	135	;# 
    94     0088                     TRISD           equ	136	;# 
    95     0089                     TRISE           equ	137	;# 
    96     008C                     PIE1            equ	140	;# 
    97     008D                     PIE2            equ	141	;# 
    98     008E                     PCON            equ	142	;# 
    99     0091                     SSPCON2         equ	145	;# 
   100     0092                     PR2             equ	146	;# 
   101     0093                     SSPADD          equ	147	;# 
   102     0094                     SSPSTAT         equ	148	;# 
   103     0098                     TXSTA           equ	152	;# 
   104     0099                     SPBRG           equ	153	;# 
   105     009C                     CMCON           equ	156	;# 
   106     009D                     CVRCON          equ	157	;# 
   107     009E                     ADRESL          equ	158	;# 
   108     009F                     ADCON1          equ	159	;# 
   109     010C                     EEDATA          equ	268	;# 
   110     010D                     EEADR           equ	269	;# 
   111     010E                     EEDATH          equ	270	;# 
   112     010F                     EEADRH          equ	271	;# 
   113     018C                     EECON1          equ	396	;# 
   114     018D                     EECON2          equ	397	;# 
   115     0000                     INDF            equ	0	;# 
   116     0001                     TMR0            equ	1	;# 
   117     0002                     PCL             equ	2	;# 
   118     0003                     STATUS          equ	3	;# 
   119     0004                     FSR             equ	4	;# 
   120     0005                     PORTA           equ	5	;# 
   121     0006                     PORTB           equ	6	;# 
   122     0007                     PORTC           equ	7	;# 
   123     0008                     PORTD           equ	8	;# 
   124     0009                     PORTE           equ	9	;# 
   125     000A                     PCLATH          equ	10	;# 
   126     000B                     INTCON          equ	11	;# 
   127     000C                     PIR1            equ	12	;# 
   128     000D                     PIR2            equ	13	;# 
   129     000E                     TMR1            equ	14	;# 
   130     000E                     TMR1L           equ	14	;# 
   131     000F                     TMR1H           equ	15	;# 
   132     0010                     T1CON           equ	16	;# 
   133     0011                     TMR2            equ	17	;# 
   134     0012                     T2CON           equ	18	;# 
   135     0013                     SSPBUF          equ	19	;# 
   136     0014                     SSPCON          equ	20	;# 
   137     0015                     CCPR1           equ	21	;# 
   138     0015                     CCPR1L          equ	21	;# 
   139     0016                     CCPR1H          equ	22	;# 
   140     0017                     CCP1CON         equ	23	;# 
   141     0018                     RCSTA           equ	24	;# 
   142     0019                     TXREG           equ	25	;# 
   143     001A                     RCREG           equ	26	;# 
   144     001B                     CCPR2           equ	27	;# 
   145     001B                     CCPR2L          equ	27	;# 
   146     001C                     CCPR2H          equ	28	;# 
   147     001D                     CCP2CON         equ	29	;# 
   148     001E                     ADRESH          equ	30	;# 
   149     001F                     ADCON0          equ	31	;# 
   150     0081                     OPTION_REG      equ	129	;# 
   151     0085                     TRISA           equ	133	;# 
   152     0086                     TRISB           equ	134	;# 
   153     0087                     TRISC           equ	135	;# 
   154     0088                     TRISD           equ	136	;# 
   155     0089                     TRISE           equ	137	;# 
   156     008C                     PIE1            equ	140	;# 
   157     008D                     PIE2            equ	141	;# 
   158     008E                     PCON            equ	142	;# 
   159     0091                     SSPCON2         equ	145	;# 
   160     0092                     PR2             equ	146	;# 
   161     0093                     SSPADD          equ	147	;# 
   162     0094                     SSPSTAT         equ	148	;# 
   163     0098                     TXSTA           equ	152	;# 
   164     0099                     SPBRG           equ	153	;# 
   165     009C                     CMCON           equ	156	;# 
   166     009D                     CVRCON          equ	157	;# 
   167     009E                     ADRESL          equ	158	;# 
   168     009F                     ADCON1          equ	159	;# 
   169     010C                     EEDATA          equ	268	;# 
   170     010D                     EEADR           equ	269	;# 
   171     010E                     EEDATH          equ	270	;# 
   172     010F                     EEADRH          equ	271	;# 
   173     018C                     EECON1          equ	396	;# 
   174     018D                     EECON2          equ	397	;# 
   175     0007                     _PORTCbits      set	7
   176     0006                     _PORTBbits      set	6
   177     0008                     _PORTD          set	8
   178     0087                     _TRISC          set	135
   179     0088                     _TRISD          set	136
   180     0086                     _TRISB          set	134
   181                           
   182                           	psect	cinit
   183     07FC                     start_initialization:	
   184                           ; #config settings
   185                           
   186     07FC                     __initialization:
   187     07FC                     end_of_initialization:	
   188                           ;End of C runtime variable initialization code
   189                           
   190     07FC                     __end_of__initialization:
   191     07FC  0183               	clrf	3
   192     07FD  120A  118A  2F16   	ljmp	_main	;jump to C main() function
   193                           
   194                           	psect	cstackCOMMON
   195     0070                     __pcstackCOMMON:
   196     0070                     ?_lcd_data:
   197     0070                     ?_lcd_cmd:	
   198                           ; 1 bytes @ 0x0
   199                           
   200     0070                     ?_lcd_init:	
   201                           ; 1 bytes @ 0x0
   202                           
   203     0070                     ?_keypad:	
   204                           ; 1 bytes @ 0x0
   205                           
   206     0070                     ?_main:	
   207                           ; 1 bytes @ 0x0
   208                           
   209     0070                     ??_lcd_data:	
   210                           ; 1 bytes @ 0x0
   211                           
   212     0070                     ??_lcd_cmd:	
   213                           ; 1 bytes @ 0x0
   214                           
   215                           
   216                           ; 1 bytes @ 0x0
   217     0070                     	ds	2
   218     0072                     lcd_data@data:
   219     0072                     lcd_cmd@cmd:	
   220                           ; 1 bytes @ 0x2
   221                           
   222                           
   223                           ; 1 bytes @ 0x2
   224     0072                     	ds	1
   225     0073                     ??_lcd_init:
   226     0073                     ??_keypad:	
   227                           ; 1 bytes @ 0x3
   228                           
   229     0073                     ??_main:	
   230                           ; 1 bytes @ 0x3
   231                           
   232                           
   233                           	psect	maintext
   234     0716                     __pmaintext:	
   235                           ; 1 bytes @ 0x3
   236 ;;
   237 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   238 ;;
   239 ;; *************** function _main *****************
   240 ;; Defined at:
   241 ;;		line 78 in file "main.c"
   242 ;; Parameters:    Size  Location     Type
   243 ;;		None
   244 ;; Auto vars:     Size  Location     Type
   245 ;;		None
   246 ;; Return value:  Size  Location     Type
   247 ;;                  1    wreg      void 
   248 ;; Registers used:
   249 ;;		wreg, status,2, status,0, pclath, cstack
   250 ;; Tracked objects:
   251 ;;		On entry : B00/0
   252 ;;		On exit  : 0/0
   253 ;;		Unchanged: 0/0
   254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   255 ;;      Params:         0       0       0       0       0
   256 ;;      Locals:         0       0       0       0       0
   257 ;;      Temps:          0       0       0       0       0
   258 ;;      Totals:         0       0       0       0       0
   259 ;;Total ram usage:        0 bytes
   260 ;; Hardware stack levels required when called: 2
   261 ;; This function calls:
   262 ;;		_keypad
   263 ;;		_lcd_cmd
   264 ;;		_lcd_init
   265 ;; This function is called by:
   266 ;;		Startup code after reset
   267 ;; This function uses a non-reentrant model
   268 ;;
   269                           
   270     0716                     _main:	
   271                           ;psect for function _main
   272                           
   273     0716                     l688:	
   274                           ;incstack = 0
   275                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   276                           
   277                           
   278                           ;main.c: 79:     TRISB = 0;
   279     0716  1683               	bsf	3,5	;RP0=1, select bank1
   280     0717  1303               	bcf	3,6	;RP1=0, select bank1
   281     0718  0186               	clrf	6	;volatile
   282                           
   283                           ;main.c: 80:     TRISD = 0;
   284     0719  0188               	clrf	8	;volatile
   285     071A                     l690:
   286                           
   287                           ;main.c: 81:     TRISC = 0xFF;
   288     071A  30FF               	movlw	255
   289     071B  0087               	movwf	7	;volatile
   290     071C                     l692:
   291                           
   292                           ;main.c: 83:     lcd_init();
   293     071C  120A  118A  26FD  120A  118A  	fcall	_lcd_init
   294     0721                     l694:
   295                           
   296                           ;main.c: 84:     lcd_cmd(0x80);
   297     0721  3080               	movlw	128
   298     0722  120A  118A  26E8  120A  118A  	fcall	_lcd_cmd
   299     0727                     l696:
   300                           
   301                           ;main.c: 87:     {;main.c: 88:         keypad();
   302     0727  120A  118A  2730  120A  118A  	fcall	_keypad
   303     072C  2F27               	goto	l696
   304     072D  120A  118A  2800   	ljmp	start
   305     0730                     __end_of_main:
   306                           
   307                           	psect	text1
   308     06FD                     __ptext1:	
   309 ;; *************** function _lcd_init *****************
   310 ;; Defined at:
   311 ;;		line 50 in file "main.c"
   312 ;; Parameters:    Size  Location     Type
   313 ;;		None
   314 ;; Auto vars:     Size  Location     Type
   315 ;;		None
   316 ;; Return value:  Size  Location     Type
   317 ;;                  1    wreg      void 
   318 ;; Registers used:
   319 ;;		wreg, status,2, status,0, pclath, cstack
   320 ;; Tracked objects:
   321 ;;		On entry : 0/0
   322 ;;		On exit  : 0/0
   323 ;;		Unchanged: 0/0
   324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   325 ;;      Params:         0       0       0       0       0
   326 ;;      Locals:         0       0       0       0       0
   327 ;;      Temps:          0       0       0       0       0
   328 ;;      Totals:         0       0       0       0       0
   329 ;;Total ram usage:        0 bytes
   330 ;; Hardware stack levels used: 1
   331 ;; Hardware stack levels required when called: 1
   332 ;; This function calls:
   333 ;;		_lcd_cmd
   334 ;; This function is called by:
   335 ;;		_main
   336 ;; This function uses a non-reentrant model
   337 ;;
   338                           
   339     06FD                     _lcd_init:	
   340                           ;psect for function _lcd_init
   341                           
   342     06FD                     l652:	
   343                           ;incstack = 0
   344                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   345                           
   346                           
   347                           ;main.c: 52:     lcd_cmd(0x38);
   348     06FD  3038               	movlw	56
   349     06FE  120A  118A  26E8  120A  118A  	fcall	_lcd_cmd
   350                           
   351                           ;main.c: 53:     lcd_cmd(0x06);
   352     0703  3006               	movlw	6
   353     0704  120A  118A  26E8  120A  118A  	fcall	_lcd_cmd
   354                           
   355                           ;main.c: 54:     lcd_cmd(0x0C);
   356     0709  300C               	movlw	12
   357     070A  120A  118A  26E8  120A  118A  	fcall	_lcd_cmd
   358                           
   359                           ;main.c: 55:     lcd_cmd(0x01);
   360     070F  3001               	movlw	1
   361     0710  120A  118A  26E8  120A  118A  	fcall	_lcd_cmd
   362     0715                     l29:
   363     0715  0008               	return
   364     0716                     __end_of_lcd_init:
   365                           
   366                           	psect	text2
   367     06E8                     __ptext2:	
   368 ;; *************** function _lcd_cmd *****************
   369 ;; Defined at:
   370 ;;		line 34 in file "main.c"
   371 ;; Parameters:    Size  Location     Type
   372 ;;  cmd             1    wreg     unsigned char 
   373 ;; Auto vars:     Size  Location     Type
   374 ;;  cmd             1    2[COMMON] unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;                  1    wreg      void 
   377 ;; Registers used:
   378 ;;		wreg
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   384 ;;      Params:         0       0       0       0       0
   385 ;;      Locals:         1       0       0       0       0
   386 ;;      Temps:          2       0       0       0       0
   387 ;;      Totals:         3       0       0       0       0
   388 ;;Total ram usage:        3 bytes
   389 ;; Hardware stack levels used: 1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_lcd_init
   394 ;;		_main
   395 ;; This function uses a non-reentrant model
   396 ;;
   397                           
   398     06E8                     _lcd_cmd:	
   399                           ;psect for function _lcd_cmd
   400                           
   401                           
   402                           ;incstack = 0
   403                           ; Regs used in _lcd_cmd: [wreg]
   404                           ;lcd_cmd@cmd stored from wreg
   405     06E8  00F2               	movwf	lcd_cmd@cmd
   406     06E9                     l642:
   407                           
   408                           ;main.c: 34: void lcd_cmd(unsigned char cmd);main.c: 35: {;main.c: 36:     PORTD = cmd;
   409     06E9  0872               	movf	lcd_cmd@cmd,w
   410     06EA  1283               	bcf	3,5	;RP0=0, select bank0
   411     06EB  1303               	bcf	3,6	;RP1=0, select bank0
   412     06EC  0088               	movwf	8	;volatile
   413     06ED                     l644:
   414                           
   415                           ;main.c: 37:     PORTBbits.RB0 = 0;
   416     06ED  1006               	bcf	6,0	;volatile
   417     06EE                     l646:
   418                           
   419                           ;main.c: 38:     PORTBbits.RB1 = 0;
   420     06EE  1086               	bcf	6,1	;volatile
   421     06EF                     l648:
   422                           
   423                           ;main.c: 39:     PORTBbits.RB2 = 1;
   424     06EF  1506               	bsf	6,2	;volatile
   425                           
   426                           ;main.c: 40:     _delay((unsigned long)((5)*(20000000/4000.0)));
   427     06F0  3021               	movlw	33
   428     06F1  00F1               	movwf	??_lcd_cmd+1
   429     06F2  3076               	movlw	118
   430     06F3  00F0               	movwf	??_lcd_cmd
   431     06F4                     u267:
   432     06F4  0BF0               	decfsz	??_lcd_cmd,f
   433     06F5  2EF4               	goto	u267
   434     06F6  0BF1               	decfsz	??_lcd_cmd+1,f
   435     06F7  2EF4               	goto	u267
   436     06F8  0000               	nop
   437     06F9                     l650:
   438                           
   439                           ;main.c: 41:     PORTBbits.RB2 = 0;
   440     06F9  1283               	bcf	3,5	;RP0=0, select bank0
   441     06FA  1303               	bcf	3,6	;RP1=0, select bank0
   442     06FB  1106               	bcf	6,2	;volatile
   443     06FC                     l20:
   444     06FC  0008               	return
   445     06FD                     __end_of_lcd_cmd:
   446                           
   447                           	psect	text3
   448     0730                     __ptext3:	
   449 ;; *************** function _keypad *****************
   450 ;; Defined at:
   451 ;;		line 58 in file "main.c"
   452 ;; Parameters:    Size  Location     Type
   453 ;;		None
   454 ;; Auto vars:     Size  Location     Type
   455 ;;		None
   456 ;; Return value:  Size  Location     Type
   457 ;;                  1    wreg      void 
   458 ;; Registers used:
   459 ;;		wreg, status,2, status,0, pclath, cstack
   460 ;; Tracked objects:
   461 ;;		On entry : 0/0
   462 ;;		On exit  : 0/0
   463 ;;		Unchanged: 0/0
   464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   465 ;;      Params:         0       0       0       0       0
   466 ;;      Locals:         0       0       0       0       0
   467 ;;      Temps:          0       0       0       0       0
   468 ;;      Totals:         0       0       0       0       0
   469 ;;Total ram usage:        0 bytes
   470 ;; Hardware stack levels used: 1
   471 ;; Hardware stack levels required when called: 1
   472 ;; This function calls:
   473 ;;		_lcd_data
   474 ;; This function is called by:
   475 ;;		_main
   476 ;; This function uses a non-reentrant model
   477 ;;
   478                           
   479     0730                     _keypad:	
   480                           ;psect for function _keypad
   481                           
   482     0730                     l654:	
   483                           ;incstack = 0
   484                           ; Regs used in _keypad: [wreg+status,2+status,0+pclath+cstack]
   485                           
   486                           
   487                           ;main.c: 59:     PORTBbits.RB3 = 1; PORTBbits.RB4 = 0; PORTBbits.RB5 = 0;
   488     0730  1283               	bcf	3,5	;RP0=0, select bank0
   489     0731  1303               	bcf	3,6	;RP1=0, select bank0
   490     0732  1586               	bsf	6,3	;volatile
   491     0733  1206               	bcf	6,4	;volatile
   492     0734  1286               	bcf	6,5	;volatile
   493                           
   494                           ;main.c: 60:     if (PORTCbits.RC0 ==1 ){ lcd_data('1');while (PORTCbits.RC0 ==1); }
   495     0735  1C07               	btfss	7,0	;volatile
   496     0736  2F38               	goto	u11
   497     0737  2F39               	goto	u10
   498     0738                     u11:
   499     0738  2F45               	goto	l32
   500     0739                     u10:
   501     0739                     l656:
   502     0739  3031               	movlw	49
   503     073A  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   504     073F                     l33:
   505     073F  1283               	bcf	3,5	;RP0=0, select bank0
   506     0740  1303               	bcf	3,6	;RP1=0, select bank0
   507     0741  1807               	btfsc	7,0	;volatile
   508     0742  2F44               	goto	u21
   509     0743  2F45               	goto	u20
   510     0744                     u21:
   511     0744  2F3F               	goto	l33
   512     0745                     u20:
   513     0745                     l32:
   514                           
   515                           ;main.c: 61:      if (PORTCbits.RC1 ==1 ){ lcd_data('4');while (PORTCbits.RC1 ==1); }
   516     0745  1C87               	btfss	7,1	;volatile
   517     0746  2F48               	goto	u31
   518     0747  2F49               	goto	u30
   519     0748                     u31:
   520     0748  2F55               	goto	l36
   521     0749                     u30:
   522     0749                     l658:
   523     0749  3034               	movlw	52
   524     074A  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   525     074F                     l37:
   526     074F  1283               	bcf	3,5	;RP0=0, select bank0
   527     0750  1303               	bcf	3,6	;RP1=0, select bank0
   528     0751  1887               	btfsc	7,1	;volatile
   529     0752  2F54               	goto	u41
   530     0753  2F55               	goto	u40
   531     0754                     u41:
   532     0754  2F4F               	goto	l37
   533     0755                     u40:
   534     0755                     l36:
   535                           
   536                           ;main.c: 62:      if (PORTCbits.RC2 ==1){ lcd_data('7');while (PORTCbits.RC2==1); }
   537     0755  1D07               	btfss	7,2	;volatile
   538     0756  2F58               	goto	u51
   539     0757  2F59               	goto	u50
   540     0758                     u51:
   541     0758  2F65               	goto	l40
   542     0759                     u50:
   543     0759                     l660:
   544     0759  3037               	movlw	55
   545     075A  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   546     075F                     l41:
   547     075F  1283               	bcf	3,5	;RP0=0, select bank0
   548     0760  1303               	bcf	3,6	;RP1=0, select bank0
   549     0761  1907               	btfsc	7,2	;volatile
   550     0762  2F64               	goto	u61
   551     0763  2F65               	goto	u60
   552     0764                     u61:
   553     0764  2F5F               	goto	l41
   554     0765                     u60:
   555     0765                     l40:
   556                           
   557                           ;main.c: 63:      if (PORTCbits.RC3 ==1 ){ lcd_data('*');while (PORTCbits.RC3 ==1); }
   558     0765  1D87               	btfss	7,3	;volatile
   559     0766  2F68               	goto	u71
   560     0767  2F69               	goto	u70
   561     0768                     u71:
   562     0768  2F75               	goto	l44
   563     0769                     u70:
   564     0769                     l662:
   565     0769  302A               	movlw	42
   566     076A  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   567     076F                     l45:
   568     076F  1283               	bcf	3,5	;RP0=0, select bank0
   569     0770  1303               	bcf	3,6	;RP1=0, select bank0
   570     0771  1987               	btfsc	7,3	;volatile
   571     0772  2F74               	goto	u81
   572     0773  2F75               	goto	u80
   573     0774                     u81:
   574     0774  2F6F               	goto	l45
   575     0775                     u80:
   576     0775                     l44:
   577                           
   578                           ;main.c: 64:      PORTBbits.RB3 = 0; PORTBbits.RB4 = 1; PORTBbits.RB5 = 0;
   579     0775  1186               	bcf	6,3	;volatile
   580     0776  1606               	bsf	6,4	;volatile
   581     0777  1286               	bcf	6,5	;volatile
   582                           
   583                           ;main.c: 65:     if (PORTCbits.RC0 ==1){ lcd_data('2');while (PORTCbits.RC0 ==1); }
   584     0778  1C07               	btfss	7,0	;volatile
   585     0779  2F7B               	goto	u91
   586     077A  2F7C               	goto	u90
   587     077B                     u91:
   588     077B  2F88               	goto	l48
   589     077C                     u90:
   590     077C                     l664:
   591     077C  3032               	movlw	50
   592     077D  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   593     0782                     l49:
   594     0782  1283               	bcf	3,5	;RP0=0, select bank0
   595     0783  1303               	bcf	3,6	;RP1=0, select bank0
   596     0784  1807               	btfsc	7,0	;volatile
   597     0785  2F87               	goto	u101
   598     0786  2F88               	goto	u100
   599     0787                     u101:
   600     0787  2F82               	goto	l49
   601     0788                     u100:
   602     0788                     l48:
   603                           
   604                           ;main.c: 66:      if (PORTCbits.RC1 ==1 ){ lcd_data('5');while (PORTCbits.RC1 ==1); }
   605     0788  1C87               	btfss	7,1	;volatile
   606     0789  2F8B               	goto	u111
   607     078A  2F8C               	goto	u110
   608     078B                     u111:
   609     078B  2F98               	goto	l52
   610     078C                     u110:
   611     078C                     l666:
   612     078C  3035               	movlw	53
   613     078D  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   614     0792                     l53:
   615     0792  1283               	bcf	3,5	;RP0=0, select bank0
   616     0793  1303               	bcf	3,6	;RP1=0, select bank0
   617     0794  1887               	btfsc	7,1	;volatile
   618     0795  2F97               	goto	u121
   619     0796  2F98               	goto	u120
   620     0797                     u121:
   621     0797  2F92               	goto	l53
   622     0798                     u120:
   623     0798                     l52:
   624                           
   625                           ;main.c: 67:      if (PORTCbits.RC2 ==1 ){ lcd_data('8');while (PORTCbits.RC2 ==1); }
   626     0798  1D07               	btfss	7,2	;volatile
   627     0799  2F9B               	goto	u131
   628     079A  2F9C               	goto	u130
   629     079B                     u131:
   630     079B  2FA8               	goto	l56
   631     079C                     u130:
   632     079C                     l668:
   633     079C  3038               	movlw	56
   634     079D  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   635     07A2                     l57:
   636     07A2  1283               	bcf	3,5	;RP0=0, select bank0
   637     07A3  1303               	bcf	3,6	;RP1=0, select bank0
   638     07A4  1907               	btfsc	7,2	;volatile
   639     07A5  2FA7               	goto	u141
   640     07A6  2FA8               	goto	u140
   641     07A7                     u141:
   642     07A7  2FA2               	goto	l57
   643     07A8                     u140:
   644     07A8                     l56:
   645                           
   646                           ;main.c: 68:      if (PORTCbits.RC3 ==1 ){ lcd_data('0');while (PORTCbits.RC3 ==1); }
   647     07A8  1D87               	btfss	7,3	;volatile
   648     07A9  2FAB               	goto	u151
   649     07AA  2FAC               	goto	u150
   650     07AB                     u151:
   651     07AB  2FB8               	goto	l60
   652     07AC                     u150:
   653     07AC                     l670:
   654     07AC  3030               	movlw	48
   655     07AD  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   656     07B2                     l61:
   657     07B2  1283               	bcf	3,5	;RP0=0, select bank0
   658     07B3  1303               	bcf	3,6	;RP1=0, select bank0
   659     07B4  1987               	btfsc	7,3	;volatile
   660     07B5  2FB7               	goto	u161
   661     07B6  2FB8               	goto	u160
   662     07B7                     u161:
   663     07B7  2FB2               	goto	l61
   664     07B8                     u160:
   665     07B8                     l60:
   666                           
   667                           ;main.c: 69:       PORTBbits.RB3 = 0; PORTBbits.RB4 = 0; PORTBbits.RB5 = 1;
   668     07B8  1186               	bcf	6,3	;volatile
   669     07B9  1206               	bcf	6,4	;volatile
   670     07BA  1686               	bsf	6,5	;volatile
   671                           
   672                           ;main.c: 70:     if (PORTCbits.RC0 ==1 ){ lcd_data('3');while (PORTCbits.RC0==1); }
   673     07BB  1C07               	btfss	7,0	;volatile
   674     07BC  2FBE               	goto	u171
   675     07BD  2FBF               	goto	u170
   676     07BE                     u171:
   677     07BE  2FCB               	goto	l64
   678     07BF                     u170:
   679     07BF                     l672:
   680     07BF  3033               	movlw	51
   681     07C0  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   682     07C5                     l65:
   683     07C5  1283               	bcf	3,5	;RP0=0, select bank0
   684     07C6  1303               	bcf	3,6	;RP1=0, select bank0
   685     07C7  1807               	btfsc	7,0	;volatile
   686     07C8  2FCA               	goto	u181
   687     07C9  2FCB               	goto	u180
   688     07CA                     u181:
   689     07CA  2FC5               	goto	l65
   690     07CB                     u180:
   691     07CB                     l64:
   692                           
   693                           ;main.c: 71:      if (PORTCbits.RC1 ==1 ){ lcd_data('6');while (PORTCbits.RC1 ==1); }
   694     07CB  1C87               	btfss	7,1	;volatile
   695     07CC  2FCE               	goto	u191
   696     07CD  2FCF               	goto	u190
   697     07CE                     u191:
   698     07CE  2FDB               	goto	l68
   699     07CF                     u190:
   700     07CF                     l674:
   701     07CF  3036               	movlw	54
   702     07D0  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   703     07D5                     l69:
   704     07D5  1283               	bcf	3,5	;RP0=0, select bank0
   705     07D6  1303               	bcf	3,6	;RP1=0, select bank0
   706     07D7  1887               	btfsc	7,1	;volatile
   707     07D8  2FDA               	goto	u201
   708     07D9  2FDB               	goto	u200
   709     07DA                     u201:
   710     07DA  2FD5               	goto	l69
   711     07DB                     u200:
   712     07DB                     l68:
   713                           
   714                           ;main.c: 72:      if (PORTCbits.RC2 ==1 ){ lcd_data('9');while (PORTCbits.RC2 ==1); }
   715     07DB  1D07               	btfss	7,2	;volatile
   716     07DC  2FDE               	goto	u211
   717     07DD  2FDF               	goto	u210
   718     07DE                     u211:
   719     07DE  2FEB               	goto	l72
   720     07DF                     u210:
   721     07DF                     l676:
   722     07DF  3039               	movlw	57
   723     07E0  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   724     07E5                     l73:
   725     07E5  1283               	bcf	3,5	;RP0=0, select bank0
   726     07E6  1303               	bcf	3,6	;RP1=0, select bank0
   727     07E7  1907               	btfsc	7,2	;volatile
   728     07E8  2FEA               	goto	u221
   729     07E9  2FEB               	goto	u220
   730     07EA                     u221:
   731     07EA  2FE5               	goto	l73
   732     07EB                     u220:
   733     07EB                     l72:
   734                           
   735                           ;main.c: 73:      if (PORTCbits.RC3 ==1 ){ lcd_data('#');while (PORTCbits.RC3==1); }
   736     07EB  1D87               	btfss	7,3	;volatile
   737     07EC  2FEE               	goto	u231
   738     07ED  2FEF               	goto	u230
   739     07EE                     u231:
   740     07EE  2FFB               	goto	l80
   741     07EF                     u230:
   742     07EF                     l678:
   743     07EF  3023               	movlw	35
   744     07F0  120A  118A  26D3  120A  118A  	fcall	_lcd_data
   745     07F5                     l77:
   746     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   747     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   748     07F7  1987               	btfsc	7,3	;volatile
   749     07F8  2FFA               	goto	u241
   750     07F9  2FFB               	goto	u240
   751     07FA                     u241:
   752     07FA  2FF5               	goto	l77
   753     07FB                     u240:
   754     07FB                     l80:
   755     07FB  0008               	return
   756     07FC                     __end_of_keypad:
   757                           
   758                           	psect	text4
   759     06D3                     __ptext4:	
   760 ;; *************** function _lcd_data *****************
   761 ;; Defined at:
   762 ;;		line 25 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;  data            1    wreg     unsigned char 
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  data            1    2[COMMON] unsigned char 
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   776 ;;      Params:         0       0       0       0       0
   777 ;;      Locals:         1       0       0       0       0
   778 ;;      Temps:          2       0       0       0       0
   779 ;;      Totals:         3       0       0       0       0
   780 ;;Total ram usage:        3 bytes
   781 ;; Hardware stack levels used: 1
   782 ;; This function calls:
   783 ;;		Nothing
   784 ;; This function is called by:
   785 ;;		_keypad
   786 ;;		_lcd_string
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790     06D3                     _lcd_data:	
   791                           ;psect for function _lcd_data
   792                           
   793                           
   794                           ;incstack = 0
   795                           ; Regs used in _lcd_data: [wreg]
   796                           ;lcd_data@data stored from wreg
   797     06D3  00F2               	movwf	lcd_data@data
   798     06D4                     l632:
   799                           
   800                           ;main.c: 25: void lcd_data(unsigned char data);main.c: 26: {;main.c: 27:     PORTD = dat
      +                          a;
   801     06D4  0872               	movf	lcd_data@data,w
   802     06D5  1283               	bcf	3,5	;RP0=0, select bank0
   803     06D6  1303               	bcf	3,6	;RP1=0, select bank0
   804     06D7  0088               	movwf	8	;volatile
   805     06D8                     l634:
   806                           
   807                           ;main.c: 28:     PORTBbits.RB0 = 1;
   808     06D8  1406               	bsf	6,0	;volatile
   809     06D9                     l636:
   810                           
   811                           ;main.c: 29:     PORTBbits.RB1 = 0;
   812     06D9  1086               	bcf	6,1	;volatile
   813     06DA                     l638:
   814                           
   815                           ;main.c: 30:     PORTBbits.RB2 = 1;
   816     06DA  1506               	bsf	6,2	;volatile
   817                           
   818                           ;main.c: 31:     _delay((unsigned long)((5)*(20000000/4000.0)));
   819     06DB  3021               	movlw	33
   820     06DC  00F1               	movwf	??_lcd_data+1
   821     06DD  3076               	movlw	118
   822     06DE  00F0               	movwf	??_lcd_data
   823     06DF                     u277:
   824     06DF  0BF0               	decfsz	??_lcd_data,f
   825     06E0  2EDF               	goto	u277
   826     06E1  0BF1               	decfsz	??_lcd_data+1,f
   827     06E2  2EDF               	goto	u277
   828     06E3  0000               	nop
   829     06E4                     l640:
   830                           
   831                           ;main.c: 32:     PORTBbits.RB2 = 0;
   832     06E4  1283               	bcf	3,5	;RP0=0, select bank0
   833     06E5  1303               	bcf	3,6	;RP1=0, select bank0
   834     06E6  1106               	bcf	6,2	;volatile
   835     06E7                     l17:
   836     06E7  0008               	return
   837     06E8                     __end_of_lcd_data:
   838     0002                     ___latbits      equ	2
   839     007E                     btemp           set	126	;btemp
   840     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_cmd
    _lcd_init->_lcd_cmd
    _keypad->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      45
                             _keypad
                            _lcd_cmd
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _keypad                                               0     0      0      15
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad
     _lcd_data
   _lcd_cmd
   _lcd_init
     _lcd_cmd

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      3       3     21.4%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       3      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 22 22:58:24 2025

           lcd_data@data 0072                       l20 06FC                       l40 0765  
                     l32 0745                       l17 06E7                       l41 075F  
                     l33 073F                       l60 07B8                       l52 0798  
                     l44 0775                       l36 0755                       l61 07B2  
                     l53 0792                       l45 076F                       l37 074F  
                     l29 0715                       l80 07FB                       l72 07EB  
                     l64 07CB                       l56 07A8                       l48 0788  
                     l73 07E5                       l65 07C5                       l57 07A2  
                     l49 0782                       l68 07DB                       l77 07F5  
                     l69 07D5                       u10 0739                       u11 0738  
                     u20 0745                       u21 0744                       u30 0749  
                     u31 0748                       u40 0755                       u41 0754  
                     u50 0759                       u51 0758                       u60 0765  
                     u61 0764                       u70 0769                       u71 0768  
                     u80 0775                       u81 0774                       u90 077C  
                     u91 077B                      l640 06E4                      l632 06D4  
                    l634 06D8                      l650 06F9                      l642 06E9  
                    l636 06D9                      l660 0759                      l644 06ED  
                    l652 06FD                      l638 06DA                      l670 07AC  
                    l662 0769                      l654 0730                      l646 06EE  
                    l672 07BF                      l664 077C                      l656 0739  
                    l648 06EF                      l674 07CF                      l666 078C  
                    l658 0749                      l690 071A                      l676 07DF  
                    l668 079C                      l692 071C                      l678 07EF  
                    l694 0721                      l696 0727                      l688 0716  
                    u100 0788                      u101 0787                      u110 078C  
                    u111 078B                      u200 07DB                      u120 0798  
                    u201 07DA                      u121 0797                      u210 07DF  
                    u130 079C                      u211 07DE                      u131 079B  
                    u220 07EB                      u140 07A8                      u221 07EA  
                    u141 07A7                      u230 07EF                      u150 07AC  
                    u231 07EE                      u151 07AB                      u240 07FB  
                    u160 07B8                      u241 07FA                      u161 07B7  
                    u170 07BF                      u171 07BE                      u180 07CB  
                    u181 07CA                      u190 07CF                      u191 07CE  
                    u267 06F4                      u277 06DF                     _main 0716  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088          __end_of_lcd_cmd 06FD                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0730  
                 ??_main 0073         __end_of_lcd_data 06E8         __end_of_lcd_init 0716  
                 _keypad 0730                ??_lcd_cmd 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 0716                  ?_keypad 0070  
              ?_lcd_data 0070                ?_lcd_init 0070                  __ptext1 06FD  
                __ptext2 06E8                  __ptext3 0730                  __ptext4 06D3  
                _lcd_cmd 06E8               ??_lcd_data 0070               ??_lcd_init 0073  
   end_of_initialization 07FC                _PORTBbits 0006                _PORTCbits 0007  
             lcd_cmd@cmd 0072           __end_of_keypad 07FC      start_initialization 07FC  
               ??_keypad 0073                ___latbits 0002                 ?_lcd_cmd 0070  
               _lcd_data 06D3                 _lcd_init 06FD  
