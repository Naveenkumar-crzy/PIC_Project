

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sat Mar 22 22:05:50 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 12/10/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     PORTA           equ	5	;# 
    63     0006                     PORTB           equ	6	;# 
    64     0007                     PORTC           equ	7	;# 
    65     0008                     PORTD           equ	8	;# 
    66     0009                     PORTE           equ	9	;# 
    67     000A                     PCLATH          equ	10	;# 
    68     000B                     INTCON          equ	11	;# 
    69     000C                     PIR1            equ	12	;# 
    70     000D                     PIR2            equ	13	;# 
    71     000E                     TMR1            equ	14	;# 
    72     000E                     TMR1L           equ	14	;# 
    73     000F                     TMR1H           equ	15	;# 
    74     0010                     T1CON           equ	16	;# 
    75     0011                     TMR2            equ	17	;# 
    76     0012                     T2CON           equ	18	;# 
    77     0013                     SSPBUF          equ	19	;# 
    78     0014                     SSPCON          equ	20	;# 
    79     0015                     CCPR1           equ	21	;# 
    80     0015                     CCPR1L          equ	21	;# 
    81     0016                     CCPR1H          equ	22	;# 
    82     0017                     CCP1CON         equ	23	;# 
    83     0018                     RCSTA           equ	24	;# 
    84     0019                     TXREG           equ	25	;# 
    85     001A                     RCREG           equ	26	;# 
    86     001B                     CCPR2           equ	27	;# 
    87     001B                     CCPR2L          equ	27	;# 
    88     001C                     CCPR2H          equ	28	;# 
    89     001D                     CCP2CON         equ	29	;# 
    90     001E                     ADRESH          equ	30	;# 
    91     001F                     ADCON0          equ	31	;# 
    92     0081                     OPTION_REG      equ	129	;# 
    93     0085                     TRISA           equ	133	;# 
    94     0086                     TRISB           equ	134	;# 
    95     0087                     TRISC           equ	135	;# 
    96     0088                     TRISD           equ	136	;# 
    97     0089                     TRISE           equ	137	;# 
    98     008C                     PIE1            equ	140	;# 
    99     008D                     PIE2            equ	141	;# 
   100     008E                     PCON            equ	142	;# 
   101     0091                     SSPCON2         equ	145	;# 
   102     0092                     PR2             equ	146	;# 
   103     0093                     SSPADD          equ	147	;# 
   104     0094                     SSPSTAT         equ	148	;# 
   105     0098                     TXSTA           equ	152	;# 
   106     0099                     SPBRG           equ	153	;# 
   107     009C                     CMCON           equ	156	;# 
   108     009D                     CVRCON          equ	157	;# 
   109     009E                     ADRESL          equ	158	;# 
   110     009F                     ADCON1          equ	159	;# 
   111     010C                     EEDATA          equ	268	;# 
   112     010D                     EEADR           equ	269	;# 
   113     010E                     EEDATH          equ	270	;# 
   114     010F                     EEADRH          equ	271	;# 
   115     018C                     EECON1          equ	396	;# 
   116     018D                     EECON2          equ	397	;# 
   117     0000                     INDF            equ	0	;# 
   118     0001                     TMR0            equ	1	;# 
   119     0002                     PCL             equ	2	;# 
   120     0003                     STATUS          equ	3	;# 
   121     0004                     FSR             equ	4	;# 
   122     0005                     PORTA           equ	5	;# 
   123     0006                     PORTB           equ	6	;# 
   124     0007                     PORTC           equ	7	;# 
   125     0008                     PORTD           equ	8	;# 
   126     0009                     PORTE           equ	9	;# 
   127     000A                     PCLATH          equ	10	;# 
   128     000B                     INTCON          equ	11	;# 
   129     000C                     PIR1            equ	12	;# 
   130     000D                     PIR2            equ	13	;# 
   131     000E                     TMR1            equ	14	;# 
   132     000E                     TMR1L           equ	14	;# 
   133     000F                     TMR1H           equ	15	;# 
   134     0010                     T1CON           equ	16	;# 
   135     0011                     TMR2            equ	17	;# 
   136     0012                     T2CON           equ	18	;# 
   137     0013                     SSPBUF          equ	19	;# 
   138     0014                     SSPCON          equ	20	;# 
   139     0015                     CCPR1           equ	21	;# 
   140     0015                     CCPR1L          equ	21	;# 
   141     0016                     CCPR1H          equ	22	;# 
   142     0017                     CCP1CON         equ	23	;# 
   143     0018                     RCSTA           equ	24	;# 
   144     0019                     TXREG           equ	25	;# 
   145     001A                     RCREG           equ	26	;# 
   146     001B                     CCPR2           equ	27	;# 
   147     001B                     CCPR2L          equ	27	;# 
   148     001C                     CCPR2H          equ	28	;# 
   149     001D                     CCP2CON         equ	29	;# 
   150     001E                     ADRESH          equ	30	;# 
   151     001F                     ADCON0          equ	31	;# 
   152     0081                     OPTION_REG      equ	129	;# 
   153     0085                     TRISA           equ	133	;# 
   154     0086                     TRISB           equ	134	;# 
   155     0087                     TRISC           equ	135	;# 
   156     0088                     TRISD           equ	136	;# 
   157     0089                     TRISE           equ	137	;# 
   158     008C                     PIE1            equ	140	;# 
   159     008D                     PIE2            equ	141	;# 
   160     008E                     PCON            equ	142	;# 
   161     0091                     SSPCON2         equ	145	;# 
   162     0092                     PR2             equ	146	;# 
   163     0093                     SSPADD          equ	147	;# 
   164     0094                     SSPSTAT         equ	148	;# 
   165     0098                     TXSTA           equ	152	;# 
   166     0099                     SPBRG           equ	153	;# 
   167     009C                     CMCON           equ	156	;# 
   168     009D                     CVRCON          equ	157	;# 
   169     009E                     ADRESL          equ	158	;# 
   170     009F                     ADCON1          equ	159	;# 
   171     010C                     EEDATA          equ	268	;# 
   172     010D                     EEADR           equ	269	;# 
   173     010E                     EEDATH          equ	270	;# 
   174     010F                     EEADRH          equ	271	;# 
   175     018C                     EECON1          equ	396	;# 
   176     018D                     EECON2          equ	397	;# 
   177                           
   178                           	psect	idataBANK0
   179     0746                     __pidataBANK0:
   180                           
   181                           ;initializer for main@F1016
   182     0746  3470               	retlw	112
   183     0747  3461               	retlw	97
   184     0748  3476               	retlw	118
   185     0749  3469               	retlw	105
   186     074A  3400               	retlw	0
   187     0006                     _PORTBbits      set	6
   188     0008                     _PORTD          set	8
   189     0088                     _TRISD          set	136
   190     0086                     _TRISB          set	134
   191                           
   192                           	psect	cinit
   193     07DE                     start_initialization:	
   194                           ; #config settings
   195                           
   196     07DE                     __initialization:
   197                           
   198                           ; Initialize objects allocated to BANK0
   199     07DE  120A  118A  2746  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   200     07E3  00A0               	movwf	__pdataBANK0& (0+127)
   201     07E4  120A  118A  2747  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   202     07E9  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   203     07EA  120A  118A  2748  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   204     07EF  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   205     07F0  120A  118A  2749  120A  118A  	fcall	__pidataBANK0+3	;fetch initializer
   206     07F5  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   207     07F6  120A  118A  274A  120A  118A  	fcall	__pidataBANK0+4	;fetch initializer
   208     07FB  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   209     07FC                     end_of_initialization:	
   210                           ;End of C runtime variable initialization code
   211                           
   212     07FC                     __end_of__initialization:
   213     07FC  0183               	clrf	3
   214     07FD  120A  118A  2FB0   	ljmp	_main	;jump to C main() function
   215                           
   216                           	psect	dataBANK0
   217     0020                     __pdataBANK0:
   218     0020                     main@F1016:
   219     0020                     	ds	5
   220                           
   221                           	psect	cstackCOMMON
   222     0070                     __pcstackCOMMON:
   223     0070                     ?_lcd_data:
   224     0070                     ?_lcd_cmd:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ?_lcd_init:	
   228                           ; 1 bytes @ 0x0
   229                           
   230     0070                     ?_main:	
   231                           ; 1 bytes @ 0x0
   232                           
   233     0070                     ??_lcd_data:	
   234                           ; 1 bytes @ 0x0
   235                           
   236     0070                     ??_lcd_cmd:	
   237                           ; 1 bytes @ 0x0
   238                           
   239                           
   240                           ; 1 bytes @ 0x0
   241     0070                     	ds	2
   242     0072                     lcd_data@data:
   243     0072                     lcd_cmd@cmd:	
   244                           ; 1 bytes @ 0x2
   245                           
   246                           
   247                           ; 1 bytes @ 0x2
   248     0072                     	ds	1
   249     0073                     ?_lcd_string:
   250     0073                     lcd_string@str:	
   251                           ; 1 bytes @ 0x3
   252                           
   253     0073                     ??_lcd_init:	
   254                           ; 1 bytes @ 0x3
   255                           
   256                           
   257                           ; 1 bytes @ 0x3
   258     0073                     	ds	1
   259     0074                     lcd_string@num:
   260                           
   261                           ; 1 bytes @ 0x4
   262     0074                     	ds	1
   263     0075                     ??_lcd_string:
   264                           
   265                           ; 1 bytes @ 0x5
   266     0075                     	ds	2
   267     0077                     lcd_string@i:
   268                           
   269                           ; 2 bytes @ 0x7
   270     0077                     	ds	2
   271     0079                     main@con:
   272     0079                     ??_main:	
   273                           ; 5 bytes @ 0x9
   274                           
   275                           
   276                           ; 1 bytes @ 0x9
   277     0079                     	ds	5
   278                           
   279                           	psect	maintext
   280     07B0                     __pmaintext:	
   281 ;;
   282 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   283 ;;
   284 ;; *************** function _main *****************
   285 ;; Defined at:
   286 ;;		line 47 in file "main.c"
   287 ;; Parameters:    Size  Location     Type
   288 ;;		None
   289 ;; Auto vars:     Size  Location     Type
   290 ;;  con             5    9[COMMON] unsigned char [5]
   291 ;; Return value:  Size  Location     Type
   292 ;;                  1    wreg      void 
   293 ;; Registers used:
   294 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   295 ;; Tracked objects:
   296 ;;		On entry : B00/0
   297 ;;		On exit  : 0/0
   298 ;;		Unchanged: 0/0
   299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   300 ;;      Params:         0       0       0       0       0
   301 ;;      Locals:         5       0       0       0       0
   302 ;;      Temps:          0       0       0       0       0
   303 ;;      Totals:         5       0       0       0       0
   304 ;;Total ram usage:        5 bytes
   305 ;; Hardware stack levels required when called: 2
   306 ;; This function calls:
   307 ;;		_lcd_cmd
   308 ;;		_lcd_init
   309 ;;		_lcd_string
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315     07B0                     _main:	
   316                           ;psect for function _main
   317                           
   318     07B0                     l649:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   321                           
   322                           
   323                           ;main.c: 48:     TRISB = 0;
   324     07B0  1683               	bsf	3,5	;RP0=1, select bank1
   325     07B1  1303               	bcf	3,6	;RP1=0, select bank1
   326     07B2  0186               	clrf	6	;volatile
   327                           
   328                           ;main.c: 49:     TRISD = 0;
   329     07B3  0188               	clrf	8	;volatile
   330     07B4                     l651:
   331                           
   332                           ;main.c: 50:     char con[]= "pavi";
   333     07B4  3079               	movlw	main@con& (0+255)
   334     07B5  0084               	movwf	4
   335     07B6  1283               	bcf	3,5	;RP0=0, select bank0
   336     07B7  1303               	bcf	3,6	;RP1=0, select bank0
   337     07B8  0820               	movf	main@F1016,w
   338     07B9  0080               	movwf	0
   339     07BA  0A84               	incf	4,f
   340     07BB  0821               	movf	main@F1016+1,w
   341     07BC  0080               	movwf	0
   342     07BD  0A84               	incf	4,f
   343     07BE  0822               	movf	main@F1016+2,w
   344     07BF  0080               	movwf	0
   345     07C0  0A84               	incf	4,f
   346     07C1  0823               	movf	main@F1016+3,w
   347     07C2  0080               	movwf	0
   348     07C3  0A84               	incf	4,f
   349     07C4  0824               	movf	main@F1016+4,w
   350     07C5  0080               	movwf	0
   351     07C6                     l653:
   352                           
   353                           ;main.c: 51:     lcd_init();
   354     07C6  120A  118A  2775  120A  118A  	fcall	_lcd_init
   355     07CB                     l655:
   356                           
   357                           ;main.c: 52:     lcd_cmd(0x80);
   358     07CB  3080               	movlw	128
   359     07CC  120A  118A  274B  120A  118A  	fcall	_lcd_cmd
   360     07D1                     l657:
   361                           
   362                           ;main.c: 54:     lcd_string(con,4);
   363     07D1  3079               	movlw	(low (main@con| 0))& (0+255)
   364     07D2  00F3               	movwf	lcd_string@str
   365     07D3  3004               	movlw	4
   366     07D4  00F4               	movwf	lcd_string@num
   367     07D5  120A  118A  278E  120A  118A  	fcall	_lcd_string
   368     07DA                     l32:	
   369                           ;main.c: 55:     while (1)
   370                           
   371     07DA                     l33:	
   372                           ;main.c: 56:     {;main.c: 58:     }
   373                           
   374     07DA  2FDA               	goto	l32
   375     07DB  120A  118A  2800   	ljmp	start
   376     07DE                     __end_of_main:
   377                           
   378                           	psect	text1
   379     078E                     __ptext1:	
   380 ;; *************** function _lcd_string *****************
   381 ;; Defined at:
   382 ;;		line 32 in file "main.c"
   383 ;; Parameters:    Size  Location     Type
   384 ;;  str             1    3[COMMON] PTR unsigned char 
   385 ;;		 -> main@con(5), 
   386 ;;  num             1    4[COMMON] unsigned char 
   387 ;; Auto vars:     Size  Location     Type
   388 ;;  i               2    7[COMMON] unsigned int 
   389 ;; Return value:  Size  Location     Type
   390 ;;                  1    wreg      void 
   391 ;; Registers used:
   392 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   393 ;; Tracked objects:
   394 ;;		On entry : 0/0
   395 ;;		On exit  : 0/0
   396 ;;		Unchanged: 0/0
   397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   398 ;;      Params:         2       0       0       0       0
   399 ;;      Locals:         2       0       0       0       0
   400 ;;      Temps:          2       0       0       0       0
   401 ;;      Totals:         6       0       0       0       0
   402 ;;Total ram usage:        6 bytes
   403 ;; Hardware stack levels used: 1
   404 ;; Hardware stack levels required when called: 1
   405 ;; This function calls:
   406 ;;		_lcd_data
   407 ;; This function is called by:
   408 ;;		_main
   409 ;; This function uses a non-reentrant model
   410 ;;
   411                           
   412     078E                     _lcd_string:	
   413                           ;psect for function _lcd_string
   414                           
   415     078E                     l639:	
   416                           ;incstack = 0
   417                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   418                           
   419                           
   420                           ;main.c: 32: void lcd_string(unsigned char *str,unsigned char num);main.c: 33: {;main.c:
      +                           34:     for(unsigned int i = 0; i <num ; i++)
   421     078E  01F7               	clrf	lcd_string@i
   422     078F  01F8               	clrf	lcd_string@i+1
   423     0790  2FA2               	goto	l645
   424     0791                     l641:
   425                           
   426                           ;main.c: 35:     {;main.c: 36:         lcd_data(str[i]);
   427     0791  0877               	movf	lcd_string@i,w
   428     0792  0773               	addwf	lcd_string@str,w
   429     0793  00F5               	movwf	??_lcd_string
   430     0794  0875               	movf	??_lcd_string,w
   431     0795  0084               	movwf	4
   432     0796  0800               	movf	0,w
   433     0797  120A  118A  2760  120A  118A  	fcall	_lcd_data
   434     079C                     l643:
   435                           
   436                           ;main.c: 37:     }
   437     079C  3001               	movlw	1
   438     079D  07F7               	addwf	lcd_string@i,f
   439     079E  1803               	skipnc
   440     079F  0AF8               	incf	lcd_string@i+1,f
   441     07A0  3000               	movlw	0
   442     07A1  07F8               	addwf	lcd_string@i+1,f
   443     07A2                     l645:
   444     07A2  0874               	movf	lcd_string@num,w
   445     07A3  00F5               	movwf	??_lcd_string
   446     07A4  01F6               	clrf	??_lcd_string+1
   447     07A5  0876               	movf	??_lcd_string+1,w
   448     07A6  0278               	subwf	lcd_string@i+1,w
   449     07A7  1D03               	skipz
   450     07A8  2FAB               	goto	u25
   451     07A9  0875               	movf	??_lcd_string,w
   452     07AA  0277               	subwf	lcd_string@i,w
   453     07AB                     u25:
   454     07AB  1C03               	skipc
   455     07AC  2FAE               	goto	u21
   456     07AD  2FAF               	goto	u20
   457     07AE                     u21:
   458     07AE  2F91               	goto	l641
   459     07AF                     u20:
   460     07AF                     l22:
   461     07AF  0008               	return
   462     07B0                     __end_of_lcd_string:
   463                           
   464                           	psect	text2
   465     0760                     __ptext2:	
   466 ;; *************** function _lcd_data *****************
   467 ;; Defined at:
   468 ;;		line 14 in file "main.c"
   469 ;; Parameters:    Size  Location     Type
   470 ;;  data            1    wreg     unsigned char 
   471 ;; Auto vars:     Size  Location     Type
   472 ;;  data            1    2[COMMON] unsigned char 
   473 ;; Return value:  Size  Location     Type
   474 ;;                  1    wreg      void 
   475 ;; Registers used:
   476 ;;		wreg
   477 ;; Tracked objects:
   478 ;;		On entry : 0/0
   479 ;;		On exit  : 0/0
   480 ;;		Unchanged: 0/0
   481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   482 ;;      Params:         0       0       0       0       0
   483 ;;      Locals:         1       0       0       0       0
   484 ;;      Temps:          2       0       0       0       0
   485 ;;      Totals:         3       0       0       0       0
   486 ;;Total ram usage:        3 bytes
   487 ;; Hardware stack levels used: 1
   488 ;; This function calls:
   489 ;;		Nothing
   490 ;; This function is called by:
   491 ;;		_lcd_string
   492 ;; This function uses a non-reentrant model
   493 ;;
   494                           
   495     0760                     _lcd_data:	
   496                           ;psect for function _lcd_data
   497                           
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _lcd_data: [wreg]
   501                           ;lcd_data@data stored from wreg
   502     0760  00F2               	movwf	lcd_data@data
   503     0761                     l619:
   504                           
   505                           ;main.c: 14: void lcd_data(unsigned char data);main.c: 15: {;main.c: 16:     PORTD = dat
      +                          a;
   506     0761  0872               	movf	lcd_data@data,w
   507     0762  1283               	bcf	3,5	;RP0=0, select bank0
   508     0763  1303               	bcf	3,6	;RP1=0, select bank0
   509     0764  0088               	movwf	8	;volatile
   510     0765                     l621:
   511                           
   512                           ;main.c: 17:     PORTBbits.RB0 = 1;
   513     0765  1406               	bsf	6,0	;volatile
   514     0766                     l623:
   515                           
   516                           ;main.c: 18:     PORTBbits.RB1 = 0;
   517     0766  1086               	bcf	6,1	;volatile
   518     0767                     l625:
   519                           
   520                           ;main.c: 19:     PORTBbits.RB2 = 1;
   521     0767  1506               	bsf	6,2	;volatile
   522                           
   523                           ;main.c: 20:     _delay((unsigned long)((5)*(20000000/4000.0)));
   524     0768  3021               	movlw	33
   525     0769  00F1               	movwf	??_lcd_data+1
   526     076A  3076               	movlw	118
   527     076B  00F0               	movwf	??_lcd_data
   528     076C                     u37:
   529     076C  0BF0               	decfsz	??_lcd_data,f
   530     076D  2F6C               	goto	u37
   531     076E  0BF1               	decfsz	??_lcd_data+1,f
   532     076F  2F6C               	goto	u37
   533     0770  0000               	nop
   534     0771                     l627:
   535                           
   536                           ;main.c: 21:     PORTBbits.RB2 = 0;
   537     0771  1283               	bcf	3,5	;RP0=0, select bank0
   538     0772  1303               	bcf	3,6	;RP1=0, select bank0
   539     0773  1106               	bcf	6,2	;volatile
   540     0774                     l13:
   541     0774  0008               	return
   542     0775                     __end_of_lcd_data:
   543                           
   544                           	psect	text3
   545     0775                     __ptext3:	
   546 ;; *************** function _lcd_init *****************
   547 ;; Defined at:
   548 ;;		line 39 in file "main.c"
   549 ;; Parameters:    Size  Location     Type
   550 ;;		None
   551 ;; Auto vars:     Size  Location     Type
   552 ;;		None
   553 ;; Return value:  Size  Location     Type
   554 ;;                  1    wreg      void 
   555 ;; Registers used:
   556 ;;		wreg, status,2, status,0, pclath, cstack
   557 ;; Tracked objects:
   558 ;;		On entry : 0/0
   559 ;;		On exit  : 0/0
   560 ;;		Unchanged: 0/0
   561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   562 ;;      Params:         0       0       0       0       0
   563 ;;      Locals:         0       0       0       0       0
   564 ;;      Temps:          0       0       0       0       0
   565 ;;      Totals:         0       0       0       0       0
   566 ;;Total ram usage:        0 bytes
   567 ;; Hardware stack levels used: 1
   568 ;; Hardware stack levels required when called: 1
   569 ;; This function calls:
   570 ;;		_lcd_cmd
   571 ;; This function is called by:
   572 ;;		_main
   573 ;; This function uses a non-reentrant model
   574 ;;
   575                           
   576     0775                     _lcd_init:	
   577                           ;psect for function _lcd_init
   578                           
   579     0775                     l647:	
   580                           ;incstack = 0
   581                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
   582                           
   583                           
   584                           ;main.c: 41:     lcd_cmd(0x38);
   585     0775  3038               	movlw	56
   586     0776  120A  118A  274B  120A  118A  	fcall	_lcd_cmd
   587                           
   588                           ;main.c: 42:     lcd_cmd(0x06);
   589     077B  3006               	movlw	6
   590     077C  120A  118A  274B  120A  118A  	fcall	_lcd_cmd
   591                           
   592                           ;main.c: 43:     lcd_cmd(0x0C);
   593     0781  300C               	movlw	12
   594     0782  120A  118A  274B  120A  118A  	fcall	_lcd_cmd
   595                           
   596                           ;main.c: 44:     lcd_cmd(0x01);
   597     0787  3001               	movlw	1
   598     0788  120A  118A  274B  120A  118A  	fcall	_lcd_cmd
   599     078D                     l25:
   600     078D  0008               	return
   601     078E                     __end_of_lcd_init:
   602                           
   603                           	psect	text4
   604     074B                     __ptext4:	
   605 ;; *************** function _lcd_cmd *****************
   606 ;; Defined at:
   607 ;;		line 23 in file "main.c"
   608 ;; Parameters:    Size  Location     Type
   609 ;;  cmd             1    wreg     unsigned char 
   610 ;; Auto vars:     Size  Location     Type
   611 ;;  cmd             1    2[COMMON] unsigned char 
   612 ;; Return value:  Size  Location     Type
   613 ;;                  1    wreg      void 
   614 ;; Registers used:
   615 ;;		wreg
   616 ;; Tracked objects:
   617 ;;		On entry : 0/0
   618 ;;		On exit  : 0/0
   619 ;;		Unchanged: 0/0
   620 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   621 ;;      Params:         0       0       0       0       0
   622 ;;      Locals:         1       0       0       0       0
   623 ;;      Temps:          2       0       0       0       0
   624 ;;      Totals:         3       0       0       0       0
   625 ;;Total ram usage:        3 bytes
   626 ;; Hardware stack levels used: 1
   627 ;; This function calls:
   628 ;;		Nothing
   629 ;; This function is called by:
   630 ;;		_lcd_init
   631 ;;		_main
   632 ;; This function uses a non-reentrant model
   633 ;;
   634                           
   635     074B                     _lcd_cmd:	
   636                           ;psect for function _lcd_cmd
   637                           
   638                           
   639                           ;incstack = 0
   640                           ; Regs used in _lcd_cmd: [wreg]
   641                           ;lcd_cmd@cmd stored from wreg
   642     074B  00F2               	movwf	lcd_cmd@cmd
   643     074C                     l629:
   644                           
   645                           ;main.c: 23: void lcd_cmd(unsigned char cmd);main.c: 24: {;main.c: 25:     PORTD = cmd;
   646     074C  0872               	movf	lcd_cmd@cmd,w
   647     074D  1283               	bcf	3,5	;RP0=0, select bank0
   648     074E  1303               	bcf	3,6	;RP1=0, select bank0
   649     074F  0088               	movwf	8	;volatile
   650     0750                     l631:
   651                           
   652                           ;main.c: 26:     PORTBbits.RB0 = 0;
   653     0750  1006               	bcf	6,0	;volatile
   654     0751                     l633:
   655                           
   656                           ;main.c: 27:     PORTBbits.RB1 = 0;
   657     0751  1086               	bcf	6,1	;volatile
   658     0752                     l635:
   659                           
   660                           ;main.c: 28:     PORTBbits.RB2 = 1;
   661     0752  1506               	bsf	6,2	;volatile
   662                           
   663                           ;main.c: 29:     _delay((unsigned long)((5)*(20000000/4000.0)));
   664     0753  3021               	movlw	33
   665     0754  00F1               	movwf	??_lcd_cmd+1
   666     0755  3076               	movlw	118
   667     0756  00F0               	movwf	??_lcd_cmd
   668     0757                     u47:
   669     0757  0BF0               	decfsz	??_lcd_cmd,f
   670     0758  2F57               	goto	u47
   671     0759  0BF1               	decfsz	??_lcd_cmd+1,f
   672     075A  2F57               	goto	u47
   673     075B  0000               	nop
   674     075C                     l637:
   675                           
   676                           ;main.c: 30:     PORTBbits.RB2 = 0;
   677     075C  1283               	bcf	3,5	;RP0=0, select bank0
   678     075D  1303               	bcf	3,6	;RP1=0, select bank0
   679     075E  1106               	bcf	6,2	;volatile
   680     075F                     l16:
   681     075F  0008               	return
   682     0760                     __end_of_lcd_cmd:
   683     0002                     ___latbits      equ	2
   684     007E                     btemp           set	126	;btemp
   685     007E                     wtemp0          set	126

Data Sizes:
    Strings     0
    Constant    0
    Data        5
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      0       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR unsigned char  size(1) Largest target is 5
		 -> main@con(COMMON[5]), 


Critical Paths under _main in COMMON

    _main->_lcd_string
    _lcd_string->_lcd_data
    _lcd_init->_lcd_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     203
                                              9 COMMON     5     5      0
                            _lcd_cmd
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (1) _lcd_string                                           6     4      2     121
                                              3 COMMON     6     4      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      29
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0      29
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_string
     _lcd_data

Address spaces:
Name               Size   Autos  Total    Usage
BANK3               96      0       0      0.0%
BITBANK3            96      0       0      0.0%
BANK2               96      0       0      0.0%
BITBANK2            96      0       0      0.0%
BANK1               80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BANK0               80      0       5      6.2%
BITBANK0            80      0       0      0.0%
COMMON              14     14      14    100.0%
BITCOMMON           14      0       0      0.0%
DATA                 0      0      19      0.0%
STACK                0      0       0      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sat Mar 22 22:05:50 2025

           lcd_data@data 0072                       l13 0774                       l22 07AF  
                     l16 075F                       l32 07DA                       l25 078D  
                     l33 07DA                       u20 07AF                       u21 07AE  
                     u25 07AB                       u37 076C                       u47 0757  
                    l621 0765                      l631 0750                      l623 0766  
                    l633 0751                      l625 0767                      l641 0791  
                    l635 0752                      l627 0771                      l619 0761  
                    l643 079C                      l651 07B4                      l637 075C  
                    l629 074C                      l645 07A2                      l653 07C6  
                    l647 0775                      l639 078E                      l655 07CB  
                    l657 07D1                      l649 07B0                      fsr0 0004  
                    indf 0000                     _main 07B0                     btemp 007E  
                   start 0000              lcd_string@i 0077                    ?_main 0070  
                  _PORTD 0008                    _TRISB 0086                    _TRISD 0088  
        __end_of_lcd_cmd 0760                    status 0003                    wtemp0 007E  
        __initialization 07DE             __end_of_main 07DE                   ??_main 0079  
       __end_of_lcd_data 0775         __end_of_lcd_init 078E                ??_lcd_cmd 0070  
          lcd_string@num 0074            lcd_string@str 0073  __end_of__initialization 07FC  
         __pcstackCOMMON 0070             __pidataBANK0 0746               __pmaintext 07B0  
              ?_lcd_data 0070               _lcd_string 078E                ?_lcd_init 0070  
                __ptext1 078E                  __ptext2 0760                  __ptext3 0775  
                __ptext4 074B                  _lcd_cmd 074B               ??_lcd_data 0070  
                main@con 0079               ??_lcd_init 0073     end_of_initialization 07FC  
              _PORTBbits 0006               lcd_cmd@cmd 0072              ?_lcd_string 0073  
    start_initialization 07DE              __pdataBANK0 0020                ___latbits 0002  
               ?_lcd_cmd 0070                main@F1016 0020             ??_lcd_string 0075  
     __end_of_lcd_string 07B0                 _lcd_data 0760                 _lcd_init 0775  
